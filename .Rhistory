styler:::style_selection()
library(rgee)
ee_Initialize()
library()
# datos será un 'data frame'
data03 <- readxl::read_xls(path = 'file.xls', sheet = 1)
data03 <- xlsx::read.xlsx(file = "file.xls", 1)
install.packages("xlsx")
install.packages("rjava")
install.packages("rJava")
install.packages("rJava", dependencies = T)
library(rJava)
library(rjava)
install.packages("rJava")
styler:::style_selection()
diamonds
library(tidyverse)
diamonds
as.logical(c(0, 0, 1, 1))
library(xlsx)
install.packages("xlsx")
library(xlsx)
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jre1.8.0_271/")
library(xlsx)
install.packages("xlsx")
library(xlsx)
version()
version
install.packages("xlsx")
data03 <- xlsx::read.xlsx(file = "file.xls", 1)
install.packages("rJava")
data03 <- xlsx::read.xlsx(file = "file.xls", 1)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
temp = [15, 22, 30]
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
boxplot(cars$speed, cars$dist)
boxplot(`Magnitude` ~ `Source`, d, col = palette(rainbow(2)))
equakes <- read.csv("data/earthquakes.csv")
boxplot(cars$speed, cars$dist)
boxplot(`Magnitude` ~ `Source`, equakes, col = palette(rainbow(2)))
r
inline
inline("2 + 2")
not_cancelled
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
library(tidyverse)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
flights
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
delays
xc <- 5
xc <- 5
install.packages("Lahman")
library("tidyverse")
batting <- as_tibble(Lahman::Batting)
batting
install.packages("datos")
bateo <- as_tibble(datos::bateadores)
bateo
bateo
rendimiento_bateadores <- bateo %>%
group_by(id_jugador) %>%
summarise(
pb = sum(golpes, na.rm = TRUE) / sum(al_bate, na.rm = TRUE),
ab = sum(al_bate, na.rm = TRUE)
)
rendimiento_bateadores
rendimiento_bateadores
rendimiento_bateadores
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0]) # the average positive delay
)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0]) # the average positive delay
)
# ¿Qué destinos tienen la mayoría de las aerolíneas?
not_cancelled %>%
group_by(dest) %>%
summarise(carriers = n_distinct(carrier)) %>%
arrange(desc(carriers)) %>%
dplyr::select(r)
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time))) %>%
filter(r %in% range(r)) %>%
dplyr::select(r)
not_cancelled %>%
group_by(year, month, day)
not_cancelled
not_cancelled %>%
group_by(year, month, day)
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time)))
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time)))
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time)))
x <- c(5, 1, 3, 2, 2, NA)
row_number(x)
min_rank(x)
dense_rank(x)
percent_rank(x)
cume_dist(x)
range(min_rank(x))
x <- c(5, 1, 3, 2, 2, 3)
range(min_rank(x))
range(min_rank(x)) %>% length()
range(min_rank(x)) %>% sum()
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time))) %>%
filter(r %in% range(r))
means <- aggregate(co2, FUN = mean)
n <- length(means)
values1 <- as.vector(means)[2:n]
values2 <- as.vector(means)[1:(n-1)]
values1 - values2
plot(values1 - values2)
plot(values1 - values2, "o")
plot(values1 - values2, "l")
plot(1:38, values1 - values2, "l")
plot(1:38, values1 - values2, "o")
plot(1:38, values1 - values2, "o", pch=4)
co2
means
load(url('https://goo.gl/uDzU8v'))
grupo
length(grupo)
x<-sample(1:10)
match(4,x)
x
match(7,x)
nota
nota*2
sort(nota*2)
barplot(height = table(x))
load(url('https://goo.gl/uDzU8v'))
barplot(height = table(x))
x
rm(list=ls())
load(url('https://goo.gl/uDzU8v'))
plot(x=1:25, y=1:25, main='Puntos: formas y colores',
sub='Cada punto una forma y un color',
xlab='Número de punto y color',
ylab='Etiqueta eje Y', col=1:25, pch=1:25)
plot(x=1:25, y=1:25, main='Puntos: formas y colores',
sub='Cada punto una forma y un color',
xlab='Número de punto y color',
ylab='Etiqueta eje Y', col=1:25, pch=1:25)
barplot(height = table(x))
plot(x=1:25, y=1:25, main='Puntos: formas y colores',
sub='Cada punto una forma y un color',
xlab='Número de punto y color',
ylab='Etiqueta eje Y', col=1:25, pch=1:25)
plot(1:38, values1 - values2, "o", pch=4)
plot(x=1:25, y=1:25, main='Puntos: formas y colores',
sub='Cada punto una forma y un color',
xlab='Número de punto y color',
ylab='Etiqueta eje Y', col=1:25, pch=1:25)
load(url('https://goo.gl/uDzU8v'))
table(grupo)
barplot(height = table(grupo))
pie(x = table(grupo))
library(tibble)
tibble
data.frame(
a = c(1:5),
b = letters(1:5)
)
letters(1:5)
data.frame(
a = c(1:5),
b = letters(1,5)
)
data.frame(
a = c(1:5),
b = letters(c(1,5))
)
letters
b = letters[c(1,5)
]
b
d = list(1:5)
d
data.frame(
a = c(1:5),
b = letters[1:5]
d = list(1:5)
)
data.frame(
a = c(1:5),
b = letters[1:5],
d = list(1:5)
)
data.frame(
a = c(1:2),
b = letters[1:2],
d = list(
x=1:5,
y="A")
)
d = list(
x=1:5,
y="A")
d
tibble(
a = c(1:2),
b = letters[1:2],
d = list(
x=1:5,
y="A")
)
data.frame(
a = c(1:2),
b = letters[1:2],
d = list(
x=1:5,
y="A")
)
data.frame(
a = c(1:2),
b = letters[1:2],
d = list(
x=1:2,
y="A")
)
tibble(
a = c(1:2),
b = letters[1:2],
d = list(
x=1:5,
y="A")
)
diag(4)
library(sf)
vias <- st_read("E:/SupportGIS/JOROPEZA/VIAS/gpl_vias_001.shp")
vias
library(tidyverse)
vias
puntos <- st_read("E:/SupportGIS/JOROPEZA/VIAS/gpt_vias.shp")
puntos
puntos %>%
group_by(IDENTIF)
puntos %>%
st_coordinates()
data(co2)
year = as.vector(time(means))
means = aggregate(co2, FUN=mean)
year = as.vector(time(means))
co2 = as.vector(means)
co2
scan()
x<-sample(1:10)
save.image("temp.Rdata")
getwd()
rm(list=ls())
load("https://gist.githubusercontent.com/ryali93/3f6e47eaa9bcd092f87a487745a205f1/raw/c60b1afc05cfdc1d2703df35a8f5f8517fa60f9e/temp.Rdata")
load(url("https://gist.githubusercontent.com/ryali93/3f6e47eaa9bcd092f87a487745a205f1/raw/c60b1afc05cfdc1d2703df35a8f5f8517fa60f9e/temp.Rdata"))
load(url("https://gist.github.com/ryali93/3f6e47eaa9bcd092f87a487745a205f1"))
load("https://gist.github.com/ryali93/3f6e47eaa9bcd092f87a487745a205f1")
load("https://gist.github.com/3f6e47eaa9bcd092f87a487745a205f1.git")
load(url("https://gist.github.com/3f6e47eaa9bcd092f87a487745a205f1.git"))
load(url("https://drive.google.com/u/0/uc?id=1SVckbu6n-Oc9Phkrr1jkGyEO0g2ZKPtB&export=download"))
rm(list=ls())
load(url("https://drive.google.com/u/0/uc?id=1SVckbu6n-Oc9Phkrr1jkGyEO0g2ZKPtB"))
rm(list=ls())
read.csv("https://raw.githubusercontent.com/ryali93/ProgramacionR/master/data/earthquakes.csv")
e
ln
load(url(https://goo.gl/uDzU8v))
load(url("https://goo.gl/uDzU8v"))
conc
head(conc)
conc
length(conc)
length(conc)/24
24*12
seq(as.Date("2021-01-01 00:00", format="%Y-%m-%d %H:%m"))
seq(as.Date("2021-01-01 01:00", format="%Y-%m-%d %H:%m"))
as.Date("2021-01-01 01:00", format="%Y-%m-%d %H:%m")
as.Date("2021-01-01 01:00", format="%Y-%m-%d %h:%m")
as.Date("2021-01-01 01:00", format="%Y-%m-%d %h:%m")
strptime("00:00", "%H:%m")
strptime("00:00", "%h:%m")
strptime("00:00", "%H:%M")
format(strptime("00:00", "%H:%M"))
seq(as.Date("2021-01-01 01:00", format="%Y-%m-%d %H:%M"))
as.Date("2021-01-01 01:00", format="%Y-%m-%d %H:%M")
seq(as.Date("2021-01-01 01:00", format="%Y-%m-%d %H:%M"),
as.Date("2021-01-01 12:00", format="%Y-%m-%d %H:%M"),by = "hour")
seq(as.POSIXct("1912-02-24 23:00:00"), as.POSIXct("1912-02-25 08:32:00"), by="hour")
