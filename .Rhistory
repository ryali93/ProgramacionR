}
names(df) <- c("codi", "value")
df %>% filter(value > 0)
df <- data.frame()
for (codi in acp$acp_codi) {
area_intersect <- concesiones_for %>%
st_intersection(acp %>% filter(acp_codi == codi)) %>%
st_area() %>% sum()/10000
df<-rbind(df, c(codi, area_intersect))
}
names(df) <- c("codi", "value")
df %>% filter(value > 0)
df %>% group_by(codi)
df %>% group_by(codi) %>% summarise(sum(value))
df %>% group_by(codi) %>% summarize(sum(value))
df %>% group_by(codi) %>% summarize(sum(value))
df
df %>% group_by(codi) %>% summarize(sum())
df %>% group_by(codi) %>% summarize(suma = sum(value))
df %>% summarize(suma = sum(value))
df %>% group_by(codi) %>% summarise(suma = sum(value))
df %>% filter(value > 0) %>% group_by(codi) %>% summarise(suma = sum(value))
df %>% filter(value > 0)
df %>% filter(value > 0) %>% group_by(codi)
df %>% filter(value > 0) %>% group_by(codi) %>% summarise(suma = sum())
iris %>%
group_by(Species) %>%
summarise(avg = mean(Sepal.Width)) %>%
arrange(avg)
iris %>%
group_by(Species)
iris %>%
group_by(Species) %>%
summarise(avg = mean(Sepal.Width))
iris %>%
group_by(Species) %>%
summarise(avg = mean(Sepal.Width)) %>%
arrange(avg)
df %>%
filter(value > 0) %>%
group_by(codi) %>%
summarise(suma = sum(value))
df
df %>%
filter(value > 0.1) %>%
group_by(codi) %>%
summarise(suma = sum(value))
df$value
as.numeric(df$value)
df %>%
filter(value > 0.1) %>%
group_by(codi) %>%
summarise(suma = sum(as.numeric(df$value)))
as.numeric(df$value)
df %>%
filter(value > 0.1) %>%
group_by(codi) %>%
summarise(suma = sum(as.numeric(df$value)))
df$value <- as.numeric(df$value)
df %>%
filter(value > 0.1) %>%
group_by(codi) %>%
summarise(suma = sum(value))
acp %>% filter(acp_codi in c("ACP107", "ACP115", "ACP6"))
acp %>% filter(acp_codi %in% c("ACP107", "ACP115", "ACP6"))
acp %>% filter(acp_codi %in% c("ACP115", "ACP6"))
acp %>% filter(acp_codi %in% c("ACP115", "ACP63"))
df <- data.frame()
for (codi in acp$acp_codi) {
area_intersect <- uso_agrario %>%
st_intersection(acp %>% filter(acp_codi == codi)) %>%
st_area() %>% sum()/10000
df<-rbind(df, c(codi, area_intersect))
}
names(df) <- c("codi", "value")
df
df
df$value
df$value <- as.numeric(df$value)
df %>%
filter(value > 0) %>%
group_by(codi) %>%
summarise(suma = sum(value))
acp
names(df) <- c("acp_codi", "value")
df
left_join(df, acp, by="acp_codi")
df
df %>% left_join(acp, by="acp_codi") %>% select(acp_codi, acp_nomb)
df %>% inner_join(acp, by="acp_codi") %>% select(acp_codi, acp_nomb)
df
df <- df %>%
filter(value > 0) %>%
group_by(codi) %>%
summarise(suma = sum(value))
df <- df %>%
filter(value > 0) %>%
group_by(acp_codi) %>%
summarise(suma = sum(value))
df %>% inner_join(acp, by="acp_codi") %>% select(acp_codi, acp_nomb)
df
df %>% left_join(acp, by="acp_codi") %>% select(acp_codi, acp_nomb)
df %>% right_join(acp, by="acp_codi") %>% select(acp_codi, acp_nomb)
df1 <- data.frame(acp$acp_codi, acp$acp_nomb)
df1
distinct(df1)
df1 <- data.frame(acp$acp_codi, acp$acp_nomb) %>% distinct()
df1
df %>% left_join(df1, by="acp_codi") %>% select(acp_codi, acp_nomb)
df1
names(df1) <- c("acp_codi", "value")
df %>% left_join(df1, by="acp_codi") %>% select(acp_codi, acp_nomb)
df1 <- data.frame(acp$acp_codi, acp$acp_nomb) %>% distinct()
names(df1) <- c("acp_codi", "acp_nomb")
df %>% left_join(df1, by="acp_codi") %>% select(acp_codi, acp_nomb)
df
df %>% left_join(df1, by="acp_codi") %>% select(acp_codi, acp_nomb, suma)
df %>%
left_join(df1, by="acp_codi") %>%
mutate(nombre = sprintf("%s: %s", acp_codi, acp_nomb))
select(nombre, suma)
df %>%
left_join(df1, by="acp_codi") %>%
mutate(nombre = sprintf("%s: %s", acp_codi, acp_nomb)) %>%
select(nombre, suma)
library(sf)
library(tidyverse)
path_gdb <- "E:/sernanp/proyectos/congresistas/2021_06_16/DB_MDD_NEW.gdb"
layers <- st_layers(dsn = path_gdb)
anp <- st_read(dsn = path_gdb, layer = layers$name[5]) %>% st_transform(crs = 32719)
acp <- st_read(dsn = path_gdb, layer = layers$name[4]) %>% st_transform(crs = 32719)
za <- st_read(dsn = path_gdb, layer = layers$name[6]) %>% st_transform(crs = 32719)
uso_agrario <- st_read(dsn = path_gdb, layer = layers$name[1]) %>% st_transform(crs = 32719)
concesiones_for <- st_read(dsn = path_gdb, layer = layers$name[2]) %>% st_transform(crs = 32719)
concesiones_min <- st_read(dsn = path_gdb, layer = layers$name[3]) %>% st_transform(crs = 32719)
concesiones_for_1 <- st_intersection(concesiones_for, anp) # Poligonos
concesiones_for_2 <- st_intersection(concesiones_for, acp) # Poligonos
concesiones_for_3 <- st_intersection(concesiones_for, za) # Poligonos
concesiones_for_3$shape
st_union(concesiones_for_1,
concesiones_for_2,
concesiones_for_3)
concesiones_for <- st_union(concesiones_for_1,
concesiones_for_2,
concesiones_for_3)
plot(st_geometry(concesiones_for))
concesiones_min_1 <- st_intersection(concesiones_min, anp) # Poligonos
concesiones_min_2 <- st_intersection(concesiones_min, acp) # Poligonos
concesiones_min_3 <- st_intersection(concesiones_min, za) # Poligonos
concesiones_min <- st_union(concesiones_min_1,
concesiones_min_2,
concesiones_min_3)
uso_agrario_1 <- st_intersection(uso_agrario, anp) # Poligonos
uso_agrario_2 <- st_intersection(uso_agrario, acp) # Poligonos
uso_agrario_3 <- st_intersection(uso_agrario, za) # Poligonos
uso_agrario_union <- st_union(uso_agrario_1,
uso_agrario_2,
uso_agrario_3)
st_write(concesiones_for, "E:/sernanp/proyectos/congresistas/2021_06_16/data/concesiones_for.shp")
st_write(concesiones_min, "E:/sernanp/proyectos/congresistas/2021_06_16/data/concesiones_min.shp")
st_write(uso_agrario_union, "E:/sernanp/proyectos/congresistas/2021_06_16/data/uso_agrario.shp")
concesiones_for
st_write(concesiones_for, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data", layer="concesiones_for.shp")
st_write(concesiones_for, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data", layer="concesiones_for1.shp")
st_write(concesiones_for, "E:/sernanp/proyectos/congresistas/2021_06_16/data/concesiones_for1.shp")
concesiones_for
concesiones_for <- st_combine(concesiones_for_1,
concesiones_for_2,
concesiones_for_3)
concesiones_for <- cbind(concesiones_for_1,
concesiones_for_2,
concesiones_for_3)
concesiones_for_1
concesiones_for_2
concesiones_for <- rbind(concesiones_for_1,
concesiones_for_2,
concesiones_for_3)
concesiones_for_1
names(concesiones_for_1)
names(concesiones_for_2)
names(concesiones_for_3)
concesiones_for_1$shape
concesiones_for <- rbind(concesiones_for_1$shape,
concesiones_for_2$shape,
concesiones_for_3$shape)
concesiones_for
concesiones_for <- st_join(concesiones_for_1$shape,
concesiones_for_2$shape,
concesiones_for_3$shape)
rbind(concesiones_for_1$shape,
concesiones_for_2$shape,
concesiones_for_3$shape)
concesiones_for <- rbind(concesiones_for_1,
concesiones_for_2$shape,
concesiones_for_3$shape)
concesiones_for_1
rbind(concesiones_for_1,
concesiones_for_2$shape,
concesiones_for_3$shape)
crs = st_crs(3857)
a = st_sf(a=1, geom = st_sfc(st_point(0:1)), crs = crs)
b = st_sf(a=1, geom = st_sfc(st_linestring(matrix(1:4,2))), crs = crs)
c = st_sf(a=4, geom = st_sfc(st_multilinestring(list(matrix(1:4,2)))), crs = crs)
rbind(a,b,c)
rbind(a,b)
rbind(a,b)
rbind(b,c)
b
a
b
c
rbind(a,b,c)
c
concesiones_for_1$shape
rbind(concesiones_for_1$shape,
concesiones_for_2$shape,
concesiones_for_3$shape)
rbind(concesiones_for_1,
concesiones_for_2$shape,
concesiones_for_3$shape)
concesiones_for_1
rbind(concesiones_for_1 %>% select(shape),
concesiones_for_2$shape,
concesiones_for_3$shape)
concesiones_for_1 %>% select(shape)
concesiones_for <- rbind(concesiones_for_1 %>% select(shape),
concesiones_for_2 %>% select(shape),
concesiones_for_3 %>% select(shape))
concesiones_for
concesiones_for_1
concesiones_for_2
concesiones_for
nrow(concesiones_for_1)
nrow(concesiones_for_2)
nrow(concesiones_for_3)
nrow(concesiones_for)
concesiones_min <- st_union(concesiones_min_1 %>% select(shape),
concesiones_min_2 %>% select(shape),
concesiones_min_3 %>% select(shape))
uso_agrario_union <- st_union(uso_agrario_1 %>% select(shape),
uso_agrario_2 %>% select(shape),
uso_agrario_3 %>% select(shape))
st_write(concesiones_for, "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/concesiones_for.shp")
st_write(concesiones_min, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/concesiones_min.shp")
st_write(uso_agrario_union, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/uso_agrario.shp")
concesiones_for
concesiones_min
uso_agrario_union
concesiones_for
st_write(concesiones_for, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/concesiones_for.shp")
concesiones_for_1
concesiones_for_1 %>% select(shape)
concesiones_for_2 %>% select(shape)
concesiones_for_3 %>% select(shape)
concesiones_min_1 %>% select(shape)
concesiones_for_1 <- st_intersection(concesiones_for, anp) # Poligonos
concesiones_for_2 <- st_intersection(concesiones_for, acp) # Poligonos
concesiones_for_3 <- st_intersection(concesiones_for, za) # Poligonos
concesiones_for_1 %>% select(shape)
concesiones_for_2 %>% select(shape)
concesiones_for_3 %>% select(shape)
concesiones_for <- rbind(concesiones_for_1 %>% select(shape),
concesiones_for_2 %>% select(shape),
concesiones_for_3 %>% select(shape))
st_write(concesiones_for, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/concesiones_for.shp")
concesiones_for
concesiones_min
uso_agrario
concesiones_for <- st_read(dsn = path_gdb, layer = layers$name[2]) %>% st_transform(crs = 32719)
concesiones_for_1 <- st_intersection(concesiones_for, anp) # Poligonos
concesiones_for_2 <- st_intersection(concesiones_for, acp) # Poligonos
concesiones_for_3 <- st_intersection(concesiones_for, za) # Poligonos
concesiones_for_1 %>% select(shape)
concesiones_for_2 %>% select(shape)
concesiones_for <- rbind(concesiones_for_1 %>% select(shape),
concesiones_for_2 %>% select(shape),
concesiones_for_3 %>% select(shape))
concesiones_for
concesiones_for$shape
unlist(concesiones_for$shape)
st_geometry_type(concesiones_for_1)
st_geometry_type(concesiones_for)
st_geometry_type(concesiones_min)
st_geometry_type(uso_agrario_union)
st_geometry_type(concesiones_for)
concesiones_for %>% filter(st_geometry_type() == "POLYGON")
concesiones_for %>% filter(st_geometry_type(concesiones_for) == "POLYGON")
concesiones_for_n <- concesiones_for %>% filter(st_geometry_type(concesiones_for) == "POLYGON")
st_write(concesiones_for_n, dsn = "E:/sernanp/proyectos/congresistas/2021_06_16/data_n/concesiones_for.shp")
library(googledrive)
library(lubridate)
library(tidyverse)
library(gridExtra)
library(outliers)
library(plotly)
library(raster)
library(mmand)
library(Orcs)
library(rgee)
library(zip)
library(sf)
source("https://gist.githubusercontent.com/csaybar/daa1a877f3d1703b61846603e986b14c/raw/222c23488951eb837623ac091debede408d60351/demo.R")
ee_Initialize()
drive_auth("s1078735@stud.sbg.ac.at")
getwd()
setwd("C:/Users/ryali93/Desktop/cloudsen12")
# Funciones auxiliares para descargar
download_viz(point = "point_8401")
# Funciones auxiliares para descargar
download_viz(point = "point_8402")
setwd("C:/Users/ryali93/Desktop/cloudsen12/point_8402")
setwd("C:/Users/ryali93/Desktop/cloudsen12/script")
source("https://gist.githubusercontent.com/csaybar/daa1a877f3d1703b61846603e986b14c/raw/222c23488951eb837623ac091debede408d60351/demo.R")
# Funciones auxiliares para descargar
download_viz(point = "point_8401")
source("https://gist.githubusercontent.com/csaybar/daa1a877f3d1703b61846603e986b14c/raw/735282528b8088d58af49c4f295d54aw7b7daa5c/demo.R")
source("https://gist.githubusercontent.com/csaybar/daa1a877f3d1703b61846603e986b14c/raw/735282528b8088d58af49c4f295d54ae7b7daa5c/demo.R")
# Funciones auxiliares para descargar
download_viz(point = "point_8401")
# Funciones auxiliares para descargar
download_viz(point = "point_8401")
# 1. List files (Get SENTINEL_2 ID)
point = "point_8401"
point_name <- point
point_name_viz <- paste0(point_name, "_viz.zip")
point_name_viz
# Points Google Drive ID
files_points_general <- googledrive::drive_ls(
path = as_id("1BeVp0i-dGSuBqCQgdGZVDj4qzX1ms7L6"),
q = sprintf("name contains '%s'", point_name)
)
files_points_general
# files Google Drive ID
files_points <- googledrive::drive_ls(
path = as_id(files_points_general$id)
)
files_points
files_points_general
# Download zip
googledrive::drive_download(
file = as_id(files_points[files_points$name == point_name_viz,]$id),
path = paste0("../", point,"/viz/", point_name_viz),
overwrite = TRUE
)
files_points$name
files_points$name == point_name_viz
files_points$name
point_name_viz
library(rgee)
library(compiler)
library(compiler)
install.packages("encryptr")
install.packages("encryptr")
install.packages("encryptr")
library("encryptr")
getwd()
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
encryptr::genkeys()
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
encryptr::genkeys()
encryptr::genkeys()
encryptr::genkeys()
library("encryptr")
encryptr::genkeys()
library("encryptr")
encryptr::genkeys()
getwd()
encryptr::genkeys()
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
decrypt_file("C:/Users/ryali93/Downloads/funcTest.R.encryptr.bin", file_name = "C:/Users/ryali93/Downloads/fun.R")
setwd("C:/Users/ryali93/Downloads")
setwd("C:/Users/ryali93/Downloads")
encryptr::genkeys()
decrypt_file("funcTest.R.encryptr.bin",
file_name = "fun1.R")
library(sf)
library(tidyverse)
path_gdb <- "E:/sernanp/proyectos/congresistas/2021_06_16/DB_MDD_NEW.gdb"
layers <- st_layers(dsn = path_gdb)
anp <- st_read(dsn = path_gdb, layer = layers$name[5]) %>% st_transform(crs = 32719)
anp
anp
st_area(anp)
anp$area_m2 <- st_area(anp)
anp %>% select(anp_cate, anp_codi, anp_nomb, area_m2)
plot(st_geometry(anp))
anp$area_m2 <- st_area(anp)/1000000
anp %>% select(anp_cate, anp_codi, anp_nomb, area_m2)
acp <- st_read(dsn = path_gdb, layer = layers$name[4]) %>% st_transform(crs = 32719)
acp
acp$acp_nomb
st_area(acp)
data.frame(acp$acp_nomb, st_area(acp))
data.frame(acp$acp_nomb, st_area(acp)/10000)
data.frame(acp$acp_codi, acp$acp_nomb, st_area(acp)/10000)
unique(acp$acp_codi)
library(tidyverse)
positivos <- read_csv("C:/Users/ryali93/Downloads/positivos_covid.csv")
class(positivos)
positivos
tail(positivos)
positivos <- read_csv("C:/Users/ryali93/Downloads/positivos_covid.csv", quote = ";")
tail(positivos)
positivos <- read_csv("C:/Users/ryali93/Downloads/positivos_covid.csv", delim=";")
positivos <- read.csv("C:/Users/ryali93/Downloads/positivos_covid.csv")
tail(positivos)
positivos <- read.csv("C:/Users/ryali93/Downloads/positivos_covid.csv", sep = ";")
tail(positivos)
positivos$ï..FECHA_CORTE
unique(positivos$ï..FECHA_CORTE)
positivos$ï..FECHA_CORTE
unique(positivos$ï..FECHA_CORTE)
tail(positivos)
tail(positivos$FECHA_RESULTADO)
positivos
tail(positivos$FECHA_RESULTADO)
tail(positivos)
head(positivos)
names(positivos)
names(positivos)[1]
names(positivos)[1] <- "FechaCorte"
positivos
head(positivos)
as.Date(positivos$FECHA_RESULTADO, format="%Y%m%d")
positivos$FECHA_RESULTADO
positivos$FECHA_RESULTADO[1]
as.Date(positivos$FECHA_RESULTADO[1], format="%Y%m%d")
class(positivos$FECHA_RESULTADO[1])
as.character(positivos$FECHA_RESULTADO[1])
as.Date(as.character(positivos$FECHA_RESULTADO[1]), format="%Y%m%d")
as.Date(as.character(positivos$FECHA_RESULTADO), format="%Y%m%d")
positivos$FECHA_RESULTADO <- as.Date(as.character(positivos$FECHA_RESULTADO), format="%Y%m%d")
plot(positivos$FECHA_RESULTADO)
plot(positivos$FECHA_RESULTADO, positivos$EDAD)
positivos <- read.csv("C:/Users/ryali93/Downloads/positivos_covid.csv", sep = ";")
names(positivos)[1] <- "FechaCorte"
positivos$FECHA_RESULTADO <- as.Date(as.character(positivos$FECHA_RESULTADO), format="%Y%m%d")
library(tidyverse)
names(positivos)
positivos_gpo <- positivos %>%
group_by(FECHA_RESULTADO) %>%
summarise(n())
positivos_gpo
positivos_gpo <- positivos %>%
group_by(FECHA_RESULTADO) %>%
summarise(CANTIDAD = n())
plot(positivos_gpo$FECHA_RESULTADO, positivos_gpo$CANTIDAD)
tail(positivos_gpo)
millas
datos::millas
library("tidyverse")
library(ggpubr)
millas
datos::millas
x <- datos::millas
x$traccion
x$traccion %>% table()
x$cilindros %>% table()
<p align="center">
<img width="600" src="https://es.r4ds.hadley.nz/03-visualize_files/figure-html/unnamed-chunk-22-1.png">
</p>
styler:::style_selection()
styler:::style_selection()
x$clase
x$clase %>% table()
diamonds
lirb
library(datos)
diamantes
diamantes$corte %>% tabla1
diamantes$corte %>% table()
demo <- tribble(
~corte,     ~freq,
"Regular",   1610,
"Bueno",     4906,
"Muy Bueno", 12082,
"Premium",   13791,
"Ideal",     21551
)
demo
diamantes
library("tidyverse")
x <- c(1, 2, 3, 4)
x_ceros <- diamonds$x == 0
diamonds[x_ceros, ]
# Ver resultados
diamonds[diamonds$x > 10, ]
# Guardar un nuevo data.frame
big <- diamonds[diamonds$x > 10, ]
# Sobreescribir el dataset existente (Cuidado!)
diamonds <- diamonds[diamonds$x < 10, ]
x <- 0
if (x < 0) {
print("Numero negativo")
} else if (x > 0) {
print("Numero positivo")
} else {
print("Cero")
}
reticulate::repl_python()
valtemp = temp[0]
library(datos)
millas$clase %>% tabla1
millas$clase %>% table()
millas$autopista %>% table()
nz <- map_data("nz")
nz
class(nz <- map_data("nz"))
head(nz <- map_data("nz"))
diamantes$corte
