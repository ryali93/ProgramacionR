[["introducción-a-r.html", "2 Introducción a R 2.1 Instalación de R, RStudio y RTools 2.2 ¿Qué es R? 2.3 ¿Qué es RStudio? 2.4 ¿Qué otros IDEs existen para R? 2.5 ¿Qué son los paquetes en R? 2.6 Tipos de lenguajes de programación 2.7 Paradigmas de programación 2.8 Ambiente de trabajo en RStudio 2.9 Mi primer Hellow world 2.10 Tipos de datos en R (character, numeric, logical, date) 2.11 Tipos de estructuras de datos (vector, matrix, dataframe, list) 2.12 Asignación de objetos 2.13 Lectura / escritura de datos (.csv, .txt, .xlsx. RData, .rds) 2.14 Funciones de R base (sum, cor, mean, sd, quantile) 2.15 Asignación01", " 2 Introducción a R 2.1 Instalación de R, RStudio y RTools 2.1.1 R Distribución e instalación - Para instalar R hay que bajar un fichero ejecutable de la página web del proyecto R: http://www.r-project.org/ - Actualmente (Mayo 2021), la versión más reciente de R para el entorno Windows es la 4.1.0 y el ejecutable de tamaño aproximadamente 86Mb tiene el nombre R-4.1.0-win.exe - Una vez bajado este ejecutable, hay que ejecutarlo y seguir las instrucciones del programa de instalación. 2.1.2 Rstudio RStudio es un editor para scripts disponible para usuarios de R en todos los sistemas operativos. - Es considerado como un entorno de desarrollo integrado (GUI) que combina un interfaz muy intuitiva con herramientas de código muy potentes que permiten sacar el máximo provecho a R. - La versión en pruebas es gratuita y está disponible en http://www.rstudio.org/ - La ventaja de este editor es que ofrece una serie de opciones no existentes en R, entre otras, por ejemplo, comprobar rápidamente que ningún paréntesis queda sin cerrarse o marcar, copiar y pegar columnas. - Pero además nos da un listado de las variables y nos da una descripción de los bancos de datos que hemos introducido. También tiene una lista de los paquetes instalados y los gráficos realizados. 2.1.3 RTools Herramientas para construir paquetes de R. Esto es lo que desea para construir sus propios paquetes en Windows, o para construir R por sí mismo. A partir de R 4.0.0 (lanzado en abril de 2020), R para Windows usa un paquete de cadena de herramientas llamado rtools40. Esta versión de Rtools incluye gcc 8.3.0 e introduce un nuevo sistema de compilación basado en msys2`, que facilita la compilación y el mantenimiento de R, así como las bibliotecas del sistema que necesitan los paquetes de R en Windows. Las compilaciones recientes de rtools40 también contienen una cadena de herramientas adicional gcc-10 ucrt para probar paquetes de R y bibliotecas del sistema con las compilaciones ucrt experimentales de R-devel. Para obtener más información sobre estos temas, siga los enlaces al final de este documento. Jeroen Ooms mantiene la versión actual de Rtools. El profesor Brian Ripley y Duncan Murdoch prepararon ediciones anteriores. El mejor lugar para informar errores es a través de la organización r-windows en GitHub. 2.2 ¿Qué es R? Proporciona un amplio abanico de herramientas estadísticas (modelos lineales y no lineales, tests estadísticos, análisis de series temporales, algoritmos de clasificación y agrupamiento, etc.). Permite definir funciones propias. De hecho, gran parte de las funciones de R están escritas en el mismo R, aunque para algoritmos computacionalmente exigentes es posible desarrollar bibliotecas en C, C++ o Fortran que se cargan dinámicamente. R hereda de S su orientación a objetos. R puede integrarse con distintas bases de datos y existen bibliotecas que facilitan su utilización desde lenguajes de programación interpretados como Python (PythonInR) . Otra de las características de R es su capacidad gráfica, que permite generar gráficos con alta calidad (ggplot). R posee su propio formato para la documentación basado en LaTeX. 2.3 ¿Qué es RStudio? RStudio es un editor para scripts disponible para usuarios de R en todos los sistemas operativos. Es considerado como un entorno de desarrollo integrado (GUI)  que combina un interfaz muy intuitiva con herramientas de código muy potentes que permiten sacar el máximo provecho a R. La versión en pruebas es gratuita y está disponible en http://www.rstudio.org/ La ventaja de este editor es que ofrece una serie de opciones no existentes en R, entre otras, por ejemplo, comprobar rápidamente que ningún paréntesis queda sin cerrarse o marcar, copiar y pegar columnas. Pero además nos da un listado de las variables y nos da una descripción de los bancos de datos que hemos introducido. También tiene una lista de los paquetes instalados y los gráficos realizados. 2.4 ¿Qué otros IDEs existen para R? Rcommander Visual studio code Jupyter notebook Pycharm 2.5 ¿Qué son los paquetes en R? # Install packages install.packages(&quot;tidyverse&quot;) # Load packages library(tidyverse) # You can also use &quot;pacman&quot; package to install # an loading other packages if (!require(&quot;pacman&quot;)) { install.packages(&quot;pacman&quot;) } pacman::p_load( tidyverse, formatR, knitr, rmdformats, pander, labelled, readxl, magrittr, kableExtra ) 2.6 Tipos de lenguajes de programación 2.6.1 Lenguaje compilado Son aquellos lenguajes de alto nivel que como su nombre lo sugiere, requieren de un compilador (programa que traduce un lenguaje de alto nivel en código máquina o lenguaje máquina) para traducirlo y crear la parte ejecutable. C++ Go 2.6.2 Lenguaje interpretado Son aquellos lenguajes de programación también de alto nivel en donde el código fuente debe ser traducido a un lenguaje que la máquina entienda y pueda realizar, no crean un archivo externo. Ruby Javascript Python R Los lenguajes de alto nivel permiten escribir instrucciones en un idioma muy parecido al inglés así como hacer uso de notaciones matemáticas comunes. 2.6.3 Lenguaje intermedio Los lenguajes intermedios son compilados hacia programas intermedios y luego interpretados, esto permite que pueda ser ejecutado desde cualquier sistema operativo sin necesidad de crear ejecutables. Java C# Elixir 2.7 Paradigmas de programación 2.7.1 Programación Estructurada 2.7.2 Programación Orientado a Objetos 2.7.3 Programación Reactiva 2.7.4 Programación Funcional 2.8 Ambiente de trabajo en RStudio 2.9 Mi primer Hellow world print(&quot;Mi primera línea en R&quot;) ## [1] &quot;Mi primera línea en R&quot; 2.10 Tipos de datos en R (character, numeric, logical, date) Tipos de Datos Información Lógico Datos que sólo permite los valores lógicos de verdadero (T) o falso (F) Numérico Datos que pueden contener números reales Complejo Datos que pueden contener números complejos Carácter Datos que permiten números y cualquier tipo caracter # integer a &lt;- 7 # numeric b &lt;- 3.14 # character c &lt;- &quot;hola mundo!&quot; # factor d &lt;- factor(&quot;a&quot;) 2.11 Tipos de estructuras de datos (vector, matrix, dataframe, list) Objetos Tipos ¿Soporta varios tipos de datos en el mismo objeto? Vector Numérico, carácter, complejo o lógico No Factor Numérico o lógico No Arreglo Numérico, carácter, complejo o lógico No Matriz Numérico, carácter, complejo o lógico No Data frame Numérico, carácter, complejo o lógico Sí ts Numérico, carácter, complejo o lógico Sí Lista Numérico, carácter, complejo, lógico, función, expresión,  Sí 2.11.1 Vector numeros &lt;- c(1,2,4,7,10,11,12,19,26) letras &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;d&quot;,&quot;g&quot;,&quot;j&quot;,&quot;k&quot;,&quot;l&quot;,&quot;s&quot;,&quot;z&quot;) numeros ## [1] 1 2 4 7 10 11 12 19 26 2.11.2 Matriz n_matrix &lt;- matrix(numeros, nrow=3, ncol=3, byrow=T) n_matrix ## [,1] [,2] [,3] ## [1,] 1 2 4 ## [2,] 7 10 11 ## [3,] 12 19 26 2.11.3 Data Frame n_y_l &lt;- data.frame(numeros=numeros, letras=letras) n_y_l ## numeros letras ## 1 1 a ## 2 2 b ## 3 4 d ## 4 7 g ## 5 10 j ## 6 11 k ## 7 12 l ## 8 19 s ## 9 26 z 2.12 Asignación de objetos 2.13 Lectura / escritura de datos (.csv, .txt, .xlsx. RData, .rds) ## Carga de datos # nombre de archivo: data/winequality-white.csv # (si no carga revisar el &quot;working directory&quot; donde estan parados): # Session &gt; Set working directory &gt; Choose directory # d_vino &lt;- read_delim(&#39;../data/c1_r_calidad_vinoblanco.csv&#39;, delim = &quot;;&quot;) 2.14 Funciones de R base (sum, cor, mean, sd, quantile) 2.15 Asignación01 Crear un repositorio del curso en Github, copiar el enlace en la plataforma de google classroom "]]
